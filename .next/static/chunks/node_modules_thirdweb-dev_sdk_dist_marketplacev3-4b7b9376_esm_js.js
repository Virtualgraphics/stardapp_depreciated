"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_thirdweb-dev_sdk_dist_marketplacev3-4b7b9376_esm_js"],{

/***/ "./node_modules/@thirdweb-dev/sdk/dist/marketplacev3-4b7b9376.esm.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/sdk/dist/marketplacev3-4b7b9376.esm.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MarketplaceV3\": function() { return /* binding */ MarketplaceV3; }\n/* harmony export */ });\n/* harmony import */ var _QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./QueryParams-da88d27c.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/QueryParams-da88d27c.esm.js\");\n/* harmony import */ var _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./thirdweb-checkout-33f13955.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/thirdweb-checkout-33f13955.esm.js\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! zod */ \"./node_modules/zod/lib/index.mjs\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IERC165_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IERC165.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC165.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IERC721_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IERC721.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC721.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IERC1155_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IERC1155.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC1155.json\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tiny-invariant */ \"./node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IERC20_json__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IERC20.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC20.json\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IBurnableERC20_json__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IBurnableERC20.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IBurnableERC20.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IDrop_json__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IDrop.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IDrop.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IDropERC20_V2_json__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IDropERC20_V2.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IDropERC20_V2.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IDropSinglePhase_json__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IDropSinglePhase_V1_json__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase_V1.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase_V1.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IMintableERC20_json__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IMintableERC20.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IMintableERC20.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IMulticall_json__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IMulticall.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IMulticall.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_ISignatureMintERC20_json__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC20.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC20.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IBurnableERC721_json__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IBurnableERC721.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IBurnableERC721.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IClaimableERC721_json__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IClaimableERC721.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IClaimableERC721.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IDelayedReveal_json__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IDelayedReveal.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IDelayedReveal.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IDropERC721_V3_json__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IDropERC721_V3.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IDropERC721_V3.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IERC721Enumerable_json__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IERC721Enumerable.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC721Enumerable.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IERC721Supply_json__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IERC721Supply.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC721Supply.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_ILazyMint_json__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/ILazyMint.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/ILazyMint.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IMintableERC721_json__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IMintableERC721.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IMintableERC721.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_ISignatureMintERC721_json__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_ISignatureMintERC721_V1_json__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721_V1.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721_V1.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_LazyMintWithTier_json__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/LazyMintWithTier.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/LazyMintWithTier.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IBurnableERC1155_json__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IBurnableERC1155.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IBurnableERC1155.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IClaimableERC1155_json__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IClaimableERC1155.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IClaimableERC1155.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IDrop1155_json__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IDrop1155.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IDrop1155.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IDropERC1155_V2_json__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IDropERC1155_V2.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IDropERC1155_V2.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IDropSinglePhase1155_json__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IDropSinglePhase1155_V1_json__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155_V1.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155_V1.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IERC1155Enumerable_json__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IERC1155Enumerable.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC1155Enumerable.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IMintableERC1155_json__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IMintableERC1155.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IMintableERC1155.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_ISignatureMintERC1155_json__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC1155.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC1155.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_ERC2771Context_json__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/ERC2771Context.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/ERC2771Context.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IAppURI_json__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IAppURI.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IAppURI.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IContractMetadata_json__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IContractMetadata.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IContractMetadata.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IDirectListings_json__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IDirectListings.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IDirectListings.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IEnglishAuctions_json__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IEnglishAuctions.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IEnglishAuctions.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IOffers_json__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IOffers.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IOffers.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IPackVRFDirect_json__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IPackVRFDirect.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IPackVRFDirect.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IPermissions_json__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IPermissions.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IPermissions.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IPermissionsEnumerable_json__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IPermissionsEnumerable.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IPermissionsEnumerable.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IPlatformFee_json__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IPlatformFee.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IPlatformFee.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IPrimarySale_json__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IPrimarySale.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IPrimarySale.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IRouter_json__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IRouter.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IRouter.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IRoyalty_json__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IRoyalty.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IRoyalty.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_Ownable_json__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/Ownable.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/Ownable.json\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! cross-fetch */ \"./node_modules/cross-fetch/dist/browser-ponyfill.js\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_48___default = /*#__PURE__*/__webpack_require__.n(cross_fetch__WEBPACK_IMPORTED_MODULE_48__);\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! eventemitter3 */ \"./node_modules/@thirdweb-dev/sdk/node_modules/eventemitter3/index.mjs\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_Forwarder_json__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/Forwarder.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/Forwarder.json\");\n/* harmony import */ var _thirdweb_dev_storage__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! @thirdweb-dev/storage */ \"./node_modules/@thirdweb-dev/storage/dist/thirdweb-dev-storage.esm.js\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IERC20Metadata_json__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IERC20Metadata.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC20Metadata.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_Router_json__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/Router.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/Router.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IThirdwebContract_json__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IThirdwebContract.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IThirdwebContract.json\");\n/* harmony import */ var merkletreejs__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! merkletreejs */ \"./node_modules/merkletreejs/dist/index.js\");\n/* harmony import */ var merkletreejs__WEBPACK_IMPORTED_MODULE_55___default = /*#__PURE__*/__webpack_require__.n(merkletreejs__WEBPACK_IMPORTED_MODULE_55__);\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! fast-deep-equal */ \"./node_modules/fast-deep-equal/index.js\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_56___default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_56__);\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IERC721Metadata_json__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IERC721Metadata.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC721Metadata.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IERC1155Metadata_json__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IERC1155Metadata.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC1155Metadata.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IDelayedRevealDeprecated_json__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IDelayedRevealDeprecated.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IDelayedRevealDeprecated.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_TWFactory_json__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/TWFactory.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/TWFactory.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_TWRegistry_json__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/TWRegistry.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/TWRegistry.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_ContractPublisher_json__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/ContractPublisher.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/ContractPublisher.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_TWMultichainRegistryLogic_json__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/TWMultichainRegistryLogic.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/TWMultichainRegistryLogic.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_TWMultichainRegistryRouter_json__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/TWMultichainRegistryRouter.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/TWMultichainRegistryRouter.json\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! bs58 */ \"./node_modules/@thirdweb-dev/sdk/node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_65___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_65__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @internal\n */\nconst DirectListingInputParamsSchema = zod__WEBPACK_IMPORTED_MODULE_66__.z.object({\n  /**\n   * The address of the asset being listed.\n   */\n  assetContractAddress: _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.ad,\n  /**\n   * The ID of the token to list.\n   */\n  tokenId: _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.ab,\n  /**\n   * The quantity of tokens to include in the listing.\n   *\n   * For ERC721s, this value should always be 1 (and will be forced internally regardless of what is passed here).\n   */\n  quantity: _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.ab[\"default\"](1),\n  /**\n   * The address of the currency to accept for the listing.\n   */\n  currencyContractAddress: _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.ad[\"default\"](_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cc),\n  /**\n   * The price to pay per unit of NFTs listed.\n   */\n  pricePerToken: _QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__.A,\n  /**\n   * The start time of the listing.\n   */\n  startTimestamp: _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.ae[\"default\"](new Date()),\n  /**\n   * The end time of the listing.\n   */\n  endTimestamp: _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.ag,\n  /**\n   * Whether the listing is reserved to be bought from a specific set of buyers.\n   */\n  isReservedListing: zod__WEBPACK_IMPORTED_MODULE_66__.z.boolean().default(false)\n});\n\n/**\n * @public\n */\n\n/**\n * Handles direct listings\n * @public\n */\nclass MarketplaceV3DirectListings {\n  // utilities\n\n  constructor(contractWrapper, storage) {\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"featureName\", _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cQ.name);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"contractWrapper\", void 0);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"storage\", void 0);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"events\", void 0);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"interceptor\", void 0);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"encoder\", void 0);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"estimator\", void 0);\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.events = new _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.aV(this.contractWrapper);\n    this.encoder = new _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.aj(this.contractWrapper);\n    this.interceptor = new _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.aW(this.contractWrapper);\n    this.estimator = new _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.aU(this.contractWrapper);\n  }\n  getAddress() {\n    return this.contractWrapper.readContract.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get the total number of direct listings.\n   * @returns Returns the total number of direct listings created.\n   * @public\n   *\n   * @example\n   * ```javascript\n   * const totalListings = await contract.directListings.getTotalCount();\n   * ```\n   */\n  async getTotalCount() {\n    return await this.contractWrapper.readContract.totalListings();\n  }\n\n  /**\n   * Get all direct listings.\n   *\n   * @example\n   * ```javascript\n   * const listings = await contract.directListings.getAll();\n   * const priceOfFirstListing = listings[0].price;\n   * ```\n   *\n   * @param filter - optional filter parameters\n   * @returns the Direct listing object array\n   */\n  async getAll(filter) {\n    const totalListings = await this.getTotalCount();\n    let start = ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(filter?.start || 0).toNumber();\n    let end = totalListings.toNumber();\n    if (end === 0) {\n      throw new Error(`No listings exist on the contract.`);\n    }\n    let rawListings = [];\n    let batches = await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cR)(start, end, this.contractWrapper.readContract.getAllListings);\n    rawListings = batches.flat();\n    const filteredListings = this.applyFilter(rawListings, filter);\n    return await Promise.all(filteredListings.map(listing => this.mapListing(listing)));\n  }\n\n  /**\n   * Get all valid direct listings.\n   *\n   * A valid listing is where the listing is active,\n   * and the creator still owns & has approved Marketplace to transfer the listed NFTs.\n   *\n   * @example\n   * ```javascript\n   * const listings = await contract.directListings.getAllValid();\n   * const priceOfFirstListing = listings[0].price;\n   * ```\n   *\n   * @param filter - optional filter parameters\n   * @returns the Direct listing object array\n   */\n  async getAllValid(filter) {\n    const totalListings = await this.getTotalCount();\n    let start = ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(filter?.start || 0).toNumber();\n    let end = totalListings.toNumber();\n    if (end === 0) {\n      throw new Error(`No listings exist on the contract.`);\n    }\n    let rawListings = [];\n    let batches = await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cR)(start, end, this.contractWrapper.readContract.getAllValidListings);\n    rawListings = batches.flat();\n    const filteredListings = this.applyFilter(rawListings, filter);\n    return await Promise.all(filteredListings.map(listing => this.mapListing(listing)));\n  }\n\n  /**\n   * Get a direct listing by id.\n   *\n   * @param listingId - the listing id\n   * @returns the Direct listing object\n   *\n   * @example\n   * ```javascript\n   * const listingId = 0;\n   * const listing = await contract.directListings.getListing(listingId);\n   * ```\n   */\n  async getListing(listingId) {\n    const listing = await this.contractWrapper.readContract.getListing(listingId);\n    return await this.mapListing(listing);\n  }\n\n  /**\n   * Check whether a buyer is approved for a reserved listing.\n   *\n   * @param listingId - the listing id\n   * @param buyer - buyer address\n   */\n  async isBuyerApprovedForListing(listingId, buyer) {\n    const listing = await this.validateListing(ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(listingId));\n    if (!listing.isReservedListing) {\n      throw new Error(`Listing ${listingId} is not a reserved listing.`);\n    }\n    return await this.contractWrapper.readContract.isBuyerApprovedForListing(listingId, buyer);\n  }\n\n  /**\n   * Check whether a currency is approved for a listing.\n   *\n   * @param listingId - the listing id\n   * @param currency - currency address\n   */\n  async isCurrencyApprovedForListing(listingId, currency) {\n    await this.validateListing(ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(listingId));\n    return await this.contractWrapper.readContract.isCurrencyApprovedForListing(listingId, currency);\n  }\n\n  /**\n   * Check price per token for an approved currency.\n   *\n   * @param listingId - the listing id\n   * @param currencyContractAddress - currency contract address\n   */\n  async currencyPriceForListing(listingId, currencyContractAddress) {\n    const listing = await this.validateListing(ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(listingId));\n    if (currencyContractAddress === listing.currencyContractAddress) {\n      return listing.pricePerToken;\n    }\n    const isApprovedCurrency = await this.isCurrencyApprovedForListing(listingId, currencyContractAddress);\n    if (!isApprovedCurrency) {\n      throw new Error(`Currency ${currencyContractAddress} is not approved for Listing ${listingId}.`);\n    }\n    return await this.contractWrapper.readContract.currencyPriceForListing(listingId, currencyContractAddress);\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Create Direct Listing\n   *\n   * @remarks Create a new listing on the marketplace where people can buy an asset directly.\n   *\n   * @example\n   * ```javascript\n   * // Data of the listing you want to create\n   * const listing = {\n   *   // address of the contract the asset you want to list is on\n   *   assetContractAddress: \"0x...\",\n   *   // token ID of the asset you want to list\n   *   tokenId: \"0\",\n   *   // how many of the asset you want to list\n   *   quantity: 1,\n   *   // address of the currency contract that will be used to pay for the listing\n   *   currencyContractAddress: NATIVE_TOKEN_ADDRESS,\n   *   // The price to pay per unit of NFTs listed.\n   *   pricePerToken: 1.5,\n   *   // when should the listing open up for offers\n   *   startTimestamp: new Date(Date.now()),\n   *   // how long the listing will be open for\n   *   endTimestamp: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000),\n   *   // Whether the listing is reserved for a specific set of buyers.\n   *   isReservedListing: false\n   * }\n   *\n   * const tx = await contract.directListings.createListing(listing);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const id = tx.id; // the id of the newly created listing\n   * ```\n   */\n  async createListing(listing) {\n    const parsedListing = DirectListingInputParamsSchema.parse(listing);\n    await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cS)(this.contractWrapper, this.getAddress(), parsedListing.assetContractAddress, parsedListing.tokenId, await this.contractWrapper.getSignerAddress());\n    const normalizedPricePerToken = await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b8)(this.contractWrapper.getProvider(), parsedListing.pricePerToken, parsedListing.currencyContractAddress);\n    const block = await this.contractWrapper.getProvider().getBlock(\"latest\");\n    const blockTime = block.timestamp;\n    if (parsedListing.startTimestamp.lt(blockTime)) {\n      parsedListing.startTimestamp = ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(blockTime);\n    }\n    const receipt = await this.contractWrapper.sendTransaction(\"createListing\", [{\n      assetContract: parsedListing.assetContractAddress,\n      tokenId: parsedListing.tokenId,\n      quantity: parsedListing.quantity,\n      currency: (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cT)(parsedListing.currencyContractAddress),\n      pricePerToken: normalizedPricePerToken,\n      startTimestamp: parsedListing.startTimestamp,\n      endTimestamp: parsedListing.endTimestamp,\n      reserved: parsedListing.isReservedListing\n    }], {\n      // Higher gas limit for create listing\n      gasLimit: 500000\n    });\n    const event = this.contractWrapper.parseLogs(\"NewListing\", receipt?.logs);\n    return {\n      id: event[0].args.listingId,\n      receipt\n    };\n  }\n\n  /**\n   * Update a Direct listing with new metadata.\n   *\n   * Note: cannot update a listing with a new quantity of 0. Use `cancelDirectListing` to remove a listing instead.\n   *\n   * @param listing - the new listing information\n   *\n   * @example\n   * ```javascript\n   * // Data of the listing you want to update\n   *\n   * const listingId = 0; // ID of the listing you want to update\n   *\n   * const listing = {\n   *   // address of the contract the asset you want to list is on\n   *   assetContractAddress: \"0x...\", // should be same as original listing\n   *   // token ID of the asset you want to list\n   *   tokenId: \"0\", // should be same as original listing\n   *   // how many of the asset you want to list\n   *   quantity: 1,\n   *   // address of the currency contract that will be used to pay for the listing\n   *   currencyContractAddress: NATIVE_TOKEN_ADDRESS,\n   *   // The price to pay per unit of NFTs listed.\n   *   pricePerToken: 1.5,\n   *   // when should the listing open up for offers\n   *   startTimestamp: new Date(Date.now()), // can't change this if listing already active\n   *   // how long the listing will be open for\n   *   endTimestamp: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000),\n   *   // Whether the listing is reserved for a specific set of buyers.\n   *   isReservedListing: false\n   * }\n   *\n   * const tx = await contract.directListings.updateListing(listingId, listing);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const id = tx.id; // the id of the newly created listing\n   * ```\n   */\n  async updateListing(listingId, listing) {\n    const parsedListing = DirectListingInputParamsSchema.parse(listing);\n    await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cS)(this.contractWrapper, this.getAddress(), parsedListing.assetContractAddress, parsedListing.tokenId, await this.contractWrapper.getSignerAddress());\n    const normalizedPricePerToken = await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b8)(this.contractWrapper.getProvider(), parsedListing.pricePerToken, parsedListing.currencyContractAddress);\n    const receipt = await this.contractWrapper.sendTransaction(\"updateListing\", [listingId, {\n      assetContract: parsedListing.assetContractAddress,\n      tokenId: parsedListing.tokenId,\n      quantity: parsedListing.quantity,\n      currency: (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cT)(parsedListing.currencyContractAddress),\n      pricePerToken: normalizedPricePerToken,\n      startTimestamp: parsedListing.startTimestamp,\n      endTimestamp: parsedListing.endTimestamp,\n      reserved: parsedListing.isReservedListing\n    }], {\n      // Higher gas limit for create listing\n      gasLimit: 500000\n    });\n    const event = this.contractWrapper.parseLogs(\"UpdatedListing\", receipt?.logs);\n    return {\n      id: event[0].args.listingId,\n      receipt\n    };\n  }\n\n  /**\n   * Cancel Direct Listing\n   *\n   * @remarks Cancel a direct listing on the marketplace\n   *\n   * @example\n   * ```javascript\n   * // The listing ID of the direct listing you want to cancel\n   * const listingId = 0;\n   *\n   * await contract.directListings.cancelListing(listingId);\n   * ```\n   */\n  async cancelListing(listingId) {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"cancelListing\", [listingId])\n    };\n  }\n\n  /**\n   * Buy from a Listing\n   *\n   * @remarks Buy from a specific direct listing from the marketplace.\n   *\n   * @example\n   * ```javascript\n   * // The ID of the listing you want to buy from\n   * const listingId = 0;\n   * // Quantity of the asset you want to buy\n   * const quantityDesired = 1;\n   *\n   * await contract.directListings.buyFromListing(listingId, quantityDesired);\n   * ```\n   *\n   * @param listingId - The listing id to buy\n   * @param quantityDesired - the quantity to buy\n   * @param receiver - optional receiver of the bought listing if different from the connected wallet\n   */\n  async buyFromListing(listingId, quantityDesired, receiver) {\n    const listing = await this.validateListing(ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(listingId));\n    const {\n      valid,\n      error\n    } = await this.isStillValidListing(listing, quantityDesired);\n    if (!valid) {\n      throw new Error(`Listing ${listingId} is no longer valid. ${error}`);\n    }\n    const buyFor = receiver ? receiver : await this.contractWrapper.getSignerAddress();\n    const quantity = ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(quantityDesired);\n    const value = ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(listing.pricePerToken).mul(quantity);\n    const overrides = (await this.contractWrapper.getCallOverrides()) || {};\n    await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cU)(this.contractWrapper, value, listing.currencyContractAddress, overrides);\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"buyFromListing\", [listingId, buyFor, quantity, listing.currencyContractAddress, value], overrides)\n    };\n  }\n\n  /**\n   * Approve buyer for reserved listing.\n   *\n   * @remarks Approve a buyer to buy from a reserved listing.\n   *\n   * @example\n   * ```javascript\n   * // The listing ID of the direct listing you want approve buyer for\n   * const listingId = \"0\";\n   *\n   * await contract.directListings.approveBuyerForReservedListing(listingId, buyer);\n   * ```\n   *\n   * @param listingId - The listing id to buy\n   * @param buyer - Address of buyer being approved\n   */\n  async approveBuyerForReservedListing(listingId, buyer) {\n    const isApproved = await this.isBuyerApprovedForListing(listingId, buyer);\n    if (!isApproved) {\n      return {\n        receipt: await this.contractWrapper.sendTransaction(\"approveBuyerForListing\", [listingId, buyer, true])\n      };\n    } else {\n      throw new Error(`Buyer ${buyer} already approved for listing ${listingId}.`);\n    }\n  }\n\n  /**\n   * Revoke approval of a buyer for reserved listing.\n   *\n   * @example\n   * ```javascript\n   * // The listing ID of the direct listing you want approve buyer for\n   * const listingId = \"0\";\n   *\n   * await contract.directListings.revokeBuyerApprovalForReservedListing(listingId, buyer);\n   * ```\n   *\n   * @param listingId - The listing id to buy\n   * @param buyer - Address of buyer being approved\n   */\n  async revokeBuyerApprovalForReservedListing(listingId, buyer) {\n    const isApproved = await this.isBuyerApprovedForListing(listingId, buyer);\n    if (isApproved) {\n      return {\n        receipt: await this.contractWrapper.sendTransaction(\"approveBuyerForListing\", [listingId, buyer, false])\n      };\n    } else {\n      throw new Error(`Buyer ${buyer} not approved for listing ${listingId}.`);\n    }\n  }\n\n  /**\n   * Approve a currency for a listing.\n   *\n   *\n   * @example\n   * ```javascript\n   * // The listing ID of the direct listing you want approve currency for\n   * const listingId = \"0\";\n   *\n   * await contract.directListings.approveCurrencyForListing(listingId, currencyContractAddress, pricePerTokenInCurrency);\n   * ```\n   *\n   * @param listingId - The listing id to buy\n   * @param currencyContractAddress - Address of currency being approved\n   * @param pricePerTokenInCurrency - Price per token in the currency\n   */\n  async approveCurrencyForListing(listingId, currencyContractAddress, pricePerTokenInCurrency) {\n    const listing = await this.validateListing(ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(listingId));\n    if (currencyContractAddress === listing.currencyContractAddress) {\n      (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(pricePerTokenInCurrency === listing.pricePerToken, \"Approving listing currency with a different price.\");\n    }\n    const currencyPrice = await this.contractWrapper.readContract.currencyPriceForListing(listingId, currencyContractAddress);\n    (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(pricePerTokenInCurrency === currencyPrice, \"Currency already approved with this price.\");\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"approveCurrencyForListing\", [listingId, currencyContractAddress, pricePerTokenInCurrency])\n    };\n  }\n\n  /**\n   * Revoke approval of a currency from a listing.\n   *\n   *\n   * @example\n   * ```javascript\n   * // The listing ID of the direct listing you want to revoke currency for\n   * const listingId = \"0\";\n   *\n   * await contract.directListings.revokeCurrencyApprovalForListing(listingId, currencyContractAddress);\n   * ```\n   *\n   * @param listingId - The listing id to buy\n   * @param currencyContractAddress - Address of currency\n   */\n  async revokeCurrencyApprovalForListing(listingId, currencyContractAddress) {\n    const listing = await this.validateListing(ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(listingId));\n    if (currencyContractAddress === listing.currencyContractAddress) {\n      throw new Error(`Can't revoke approval for main listing currency.`);\n    }\n    const currencyPrice = await this.contractWrapper.readContract.currencyPriceForListing(listingId, currencyContractAddress);\n    (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(!currencyPrice.isZero(), \"Currency not approved.\");\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"approveCurrencyForListing\", [listingId, currencyContractAddress, ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(0)])\n    };\n  }\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  /**\n   * Throws error if listing could not be found\n   *\n   * @param listingId - Listing to check for\n   */\n  async validateListing(listingId) {\n    try {\n      return await this.getListing(listingId);\n    } catch (err) {\n      console.error(`Error getting the listing with id ${listingId}`);\n      throw err;\n    }\n  }\n\n  /**\n   * Helper method maps the auction listing to the direct listing interface.\n   *\n   * @internal\n   * @param listing - The listing to map, as returned from the contract.\n   * @returns - The mapped interface.\n   */\n  async mapListing(listing) {\n    let status = _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b2.UNSET;\n    const block = await this.contractWrapper.getProvider().getBlock(\"latest\");\n    const blockTime = block.timestamp;\n    switch (listing.status) {\n      case 1:\n        status = ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(listing.startTimestamp).gt(blockTime) ? _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b2.Created : ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(listing.endTimestamp).lt(blockTime) ? _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b2.Expired : _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b2.Active;\n        break;\n      case 2:\n        status = _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b2.Completed;\n        break;\n      case 3:\n        status = _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b2.Cancelled;\n        break;\n    }\n    return {\n      assetContractAddress: listing.assetContract,\n      currencyContractAddress: listing.currency,\n      pricePerToken: listing.pricePerToken.toString(),\n      currencyValuePerToken: await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b6)(this.contractWrapper.getProvider(), listing.currency, listing.pricePerToken),\n      id: listing.listingId.toString(),\n      tokenId: listing.tokenId.toString(),\n      quantity: listing.quantity.toString(),\n      startTimeInSeconds: ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(listing.startTimestamp).toNumber(),\n      asset: await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cV)(listing.assetContract, this.contractWrapper.getProvider(), listing.tokenId, this.storage),\n      endTimeInSeconds: ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(listing.endTimestamp).toNumber(),\n      creatorAddress: listing.listingCreator,\n      isReservedListing: listing.reserved,\n      status: status\n    };\n  }\n\n  /**\n   * Use this method to check if a direct listing is still valid.\n   *\n   * Ways a direct listing can become invalid:\n   * 1. The asset holder transferred the asset to another wallet\n   * 2. The asset holder burned the asset\n   * 3. The asset holder removed the approval on the marketplace\n   *\n   * @internal\n   * @param listing - The listing to check.\n   * @returns - True if the listing is valid, false otherwise.\n   */\n  async isStillValidListing(listing, quantity) {\n    const approved = await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cW)(this.contractWrapper.getProvider(), this.getAddress(), listing.assetContractAddress, listing.tokenId, listing.creatorAddress);\n    if (!approved) {\n      return {\n        valid: false,\n        error: `Token '${listing.tokenId}' from contract '${listing.assetContractAddress}' is not approved for transfer`\n      };\n    }\n    const provider = this.contractWrapper.getProvider();\n    const erc165 = new ethers__WEBPACK_IMPORTED_MODULE_69__.Contract(listing.assetContractAddress, _thirdweb_dev_contracts_js_dist_abis_IERC165_json__WEBPACK_IMPORTED_MODULE_0__, provider);\n    const isERC721 = await erc165.supportsInterface(_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.ca);\n    const isERC1155 = await erc165.supportsInterface(_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cb);\n    if (isERC721) {\n      const asset = new ethers__WEBPACK_IMPORTED_MODULE_69__.Contract(listing.assetContractAddress, _thirdweb_dev_contracts_js_dist_abis_IERC721_json__WEBPACK_IMPORTED_MODULE_1__, provider);\n      const valid = (await asset.ownerOf(listing.tokenId)).toLowerCase() === listing.creatorAddress.toLowerCase();\n      return {\n        valid,\n        error: valid ? undefined : `Seller is not the owner of Token '${listing.tokenId}' from contract '${listing.assetContractAddress} anymore'`\n      };\n    } else if (isERC1155) {\n      const asset = new ethers__WEBPACK_IMPORTED_MODULE_69__.Contract(listing.assetContractAddress, _thirdweb_dev_contracts_js_dist_abis_IERC1155_json__WEBPACK_IMPORTED_MODULE_2__, provider);\n      const balance = await asset.balanceOf(listing.creatorAddress, listing.tokenId);\n      const valid = balance.gte(quantity || listing.quantity);\n      return {\n        valid,\n        error: valid ? undefined : `Seller does not have enough balance of Token '${listing.tokenId}' from contract '${listing.assetContractAddress} to fulfill the listing`\n      };\n    } else {\n      return {\n        valid: false,\n        error: \"Contract does not implement ERC 1155 or ERC 721.\"\n      };\n    }\n  }\n  applyFilter(listings, filter) {\n    let rawListings = [...listings];\n    if (filter) {\n      if (filter.seller) {\n        rawListings = rawListings.filter(seller => seller.listingCreator.toString().toLowerCase() === filter?.seller?.toString().toLowerCase());\n      }\n      if (filter.tokenContract) {\n        rawListings = rawListings.filter(tokenContract => tokenContract.assetContract.toString().toLowerCase() === filter?.tokenContract?.toString().toLowerCase());\n      }\n      if (filter.tokenId !== undefined) {\n        rawListings = rawListings.filter(tokenContract => tokenContract.tokenId.toString() === filter?.tokenId?.toString());\n      }\n    }\n    return filter?.count && filter.count < rawListings.length ? rawListings.slice(0, filter.count) : rawListings;\n  }\n}\n\n/**\n * @internal\n */\nconst EnglishAuctionInputParamsSchema = zod__WEBPACK_IMPORTED_MODULE_66__.z.object({\n  /**\n   * The address of the asset being auctioned.\n   */\n  assetContractAddress: _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.ad,\n  /**\n   * The ID of the token to auction.\n   */\n  tokenId: _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.ab,\n  /**\n   * The quantity of tokens to include in the listing.\n   *\n   * For ERC721s, this value should always be 1 (and will be forced internally regardless of what is passed here).\n   */\n  quantity: _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.ab[\"default\"](1),\n  /**\n   * The address of the currency to accept for the listing.\n   */\n  currencyContractAddress: _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.ad[\"default\"](_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cc),\n  /**\n   * The minimum price that a bid must be in order to be accepted.\n   */\n  minimumBidAmount: _QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__.A,\n  /**\n   * The buyout price of the auction.\n   */\n  buyoutBidAmount: _QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__.A,\n  /**\n   * This is a buffer e.g. x seconds.\n   *\n   * If a new winning bid is made less than x seconds before expirationTimestamp, the\n   * expirationTimestamp is increased by x seconds.\n   */\n  timeBufferInSeconds: _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.ab[\"default\"](900),\n  // 15 minutes by default\n\n  /**\n   * This is a buffer in basis points e.g. x%.\n   *\n   * To be considered as a new winning bid, a bid must be at least x% greater than\n   * the current winning bid.\n   */\n  bidBufferBps: _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.ab[\"default\"](500),\n  // 5% by default\n\n  /**\n   * The start time of the auction.\n   */\n  startTimestamp: _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.ae[\"default\"](new Date()),\n  /**\n   * The end time of the auction.\n   */\n  endTimestamp: _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.ag\n});\n\n/**\n * @public\n */\n\n/**\n * Handles auctions\n * @public\n */\nclass MarketplaceV3EnglishAuctions {\n  // utilities\n\n  constructor(contractWrapper, storage) {\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"featureName\", _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cX.name);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"contractWrapper\", void 0);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"storage\", void 0);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"events\", void 0);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"interceptor\", void 0);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"encoder\", void 0);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"estimator\", void 0);\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.events = new _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.aV(this.contractWrapper);\n    this.encoder = new _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.aj(this.contractWrapper);\n    this.interceptor = new _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.aW(this.contractWrapper);\n    this.estimator = new _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.aU(this.contractWrapper);\n  }\n  getAddress() {\n    return this.contractWrapper.readContract.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get the total number of english auctions.\n   * @returns Returns the total number of auctions created.\n   * @public\n   *\n   * @example\n   * ```javascript\n   * const totalAuctions = await contract.englishAuctions.getTotalCount();\n   * ```\n   */\n  async getTotalCount() {\n    return await this.contractWrapper.readContract.totalAuctions();\n  }\n\n  /**\n   * Get all auctions.\n   *\n   * @example\n   * ```javascript\n   * const auctions = await contract.englishAuctions.getAll();\n   * ```\n   *\n   * @param filter - optional filter parameters\n   * @returns the Auction object array\n   */\n  async getAll(filter) {\n    const totalAuctions = await this.getTotalCount();\n    let start = ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(filter?.start || 0).toNumber();\n    let end = totalAuctions.toNumber();\n    if (end === 0) {\n      throw new Error(`No auctions exist on the contract.`);\n    }\n    let rawAuctions = [];\n    let batches = await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cR)(start, end, this.contractWrapper.readContract.getAllAuctions);\n    rawAuctions = batches.flat();\n    const filteredAuctions = this.applyFilter(rawAuctions, filter);\n    return await Promise.all(filteredAuctions.map(auction => this.mapAuction(auction)));\n  }\n\n  /**\n   * Get all valid auctions.\n   *\n   * @example\n   * ```javascript\n   * const auctions = await contract.englishAuctions.getAllValid();\n   * ```\n   *\n   * @param filter - optional filter parameters\n   * @returns the Auction object array\n   */\n  async getAllValid(filter) {\n    const totalAuctions = await this.getTotalCount();\n    let start = ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(filter?.start || 0).toNumber();\n    let end = totalAuctions.toNumber();\n    if (end === 0) {\n      throw new Error(`No auctions exist on the contract.`);\n    }\n    let rawAuctions = [];\n    let batches = await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cR)(start, end, this.contractWrapper.readContract.getAllValidAuctions);\n    rawAuctions = batches.flat();\n    const filteredAuctions = this.applyFilter(rawAuctions, filter);\n    return await Promise.all(filteredAuctions.map(auction => this.mapAuction(auction)));\n  }\n\n  /**\n   * Get an Auction by id.\n   *\n   * @example\n   * ```javascript\n   * const auctionId = 0;\n   * const auction = await contract.englishAuctions.getAuction(auctionId);\n   * ```\n   *\n   * @param auctionId - the auction Id\n   * @returns the Auction object\n   */\n  async getAuction(auctionId) {\n    const auction = await this.contractWrapper.readContract.getAuction(auctionId);\n    return await this.mapAuction(auction);\n  }\n\n  /**\n   * Get Highest Bid\n   *\n   * @remarks Get the current highest bid of an active auction.\n   *\n   * @example\n   * ```javascript\n   * // The ID of the auction\n   * const auctionId = 0;\n   *\n   * contract.englishAuctions.\n   *   .getWinningBid(auctionId)\n   *   .then((bid) => console.log(bid))\n   *   .catch((err) => console.error(err));\n   * ```\n   */\n  async getWinningBid(auctionId) {\n    await this.validateAuction(ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(auctionId));\n    const bid = await this.contractWrapper.readContract.getWinningBid(auctionId);\n    if (bid._bidder === ethers__WEBPACK_IMPORTED_MODULE_69__.constants.AddressZero) {\n      return undefined;\n    }\n    return await this.mapBid(auctionId.toString(), bid._bidder, bid._currency, bid._bidAmount.toString());\n  }\n\n  /**\n   * Check if a bid-amount is/will be a winning bid.\n   *\n   * @param auctionId - Auction Id\n   * @param bidAmount - Amount to bid\n   * @returns the Auction object\n   */\n  async isWinningBid(auctionId, bidAmount) {\n    return await this.contractWrapper.readContract.isNewWinningBid(auctionId, bidAmount);\n  }\n\n  /**\n   * Get Auction Winner\n   *\n   * @remarks Get the winner of the auction after an auction ends.\n   *\n   * @example\n   * ```javascript\n   * // The auction ID of the auction that closed\n   * const auctionId = 0;\n   *\n   * contract.englishAuctions.\n   *   .getWinner(auctionId)\n   *   .then((auctionWinner) => console.log(auctionWinner))\n   *   .catch((err) => console.error(err));\n   * ```\n   */\n  async getWinner(auctionId) {\n    const auction = await this.validateAuction(ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(auctionId));\n    const bid = await this.contractWrapper.readContract.getWinningBid(auctionId);\n    const now = ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(Math.floor(Date.now() / 1000));\n    const endTime = ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(auction.endTimeInSeconds);\n\n    // if we have a winner in the map and the current time is past the endtime of the auction return the address of the winner\n    if (now.gt(endTime) && bid._bidder !== ethers__WEBPACK_IMPORTED_MODULE_69__.constants.AddressZero) {\n      return bid._bidder;\n    }\n    // otherwise fall back to query filter things\n\n    // TODO this should be via indexer or direct contract call\n    const closedAuctions = await this.contractWrapper.readContract.queryFilter(this.contractWrapper.readContract.filters.AuctionClosed());\n    const closed = closedAuctions.find(a => a.args.auctionId.eq(ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(auctionId)));\n    if (!closed) {\n      throw new Error(`Could not find auction with ID ${auctionId} in closed auctions`);\n    }\n    return closed.args.winningBidder;\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Create Auction\n   *\n   * @remarks Create a new auction where people can bid on an asset.\n   *\n   * @example\n   * ```javascript\n   * // Data of the auction you want to create\n   * const auction = {\n   *   // address of the contract of the asset you want to auction\n   *   assetContractAddress: \"0x...\",\n   *   // token ID of the asset you want to auction\n   *   tokenId: \"0\",\n   *   // how many of the asset you want to auction\n   *   quantity: 1,\n   *   // address of the currency contract that will be used to pay for the auctioned tokens\n   *   currencyContractAddress: NATIVE_TOKEN_ADDRESS,\n   *   // the minimum bid that will be accepted for the token\n   *   minimumBidAmount: \"1.5\",\n   *   // how much people would have to bid to instantly buy the asset\n   *   buyoutBidAmount: \"10\",\n   *   // If a bid is made less than these many seconds before expiration, the expiration time is increased by this.\n   *   timeBufferInSeconds: \"900\", // 15 minutes by default\n   *   // A bid must be at least this much bps greater than the current winning bid\n   *   bidBufferBps: \"500\", // 5% by default\n   *   // when should the auction open up for bidding\n   *   startTimestamp: new Date(Date.now()),\n   *   // end time of auction\n   *   endTimestamp: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000),\n   * }\n   *\n   * const tx = await contract.englishAuctions.createAuction(auction);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const id = tx.id; // the id of the newly created auction\n   * ```\n   */\n  async createAuction(auction) {\n    const parsedAuction = EnglishAuctionInputParamsSchema.parse(auction);\n    await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cS)(this.contractWrapper, this.getAddress(), parsedAuction.assetContractAddress, parsedAuction.tokenId, await this.contractWrapper.getSignerAddress());\n    const normalizedBuyoutAmount = await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b8)(this.contractWrapper.getProvider(), parsedAuction.buyoutBidAmount, parsedAuction.currencyContractAddress);\n    const normalizedMinBidAmount = await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b8)(this.contractWrapper.getProvider(), parsedAuction.minimumBidAmount, parsedAuction.currencyContractAddress);\n    const block = await this.contractWrapper.getProvider().getBlock(\"latest\");\n    const blockTime = block.timestamp;\n    if (parsedAuction.startTimestamp.lt(blockTime)) {\n      parsedAuction.startTimestamp = ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(blockTime);\n    }\n    const receipt = await this.contractWrapper.sendTransaction(\"createAuction\", [{\n      assetContract: parsedAuction.assetContractAddress,\n      tokenId: parsedAuction.tokenId,\n      quantity: parsedAuction.quantity,\n      currency: (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cT)(parsedAuction.currencyContractAddress),\n      minimumBidAmount: normalizedMinBidAmount,\n      buyoutBidAmount: normalizedBuyoutAmount,\n      timeBufferInSeconds: parsedAuction.timeBufferInSeconds,\n      bidBufferBps: parsedAuction.bidBufferBps,\n      startTimestamp: parsedAuction.startTimestamp,\n      endTimestamp: parsedAuction.endTimestamp\n    }], {\n      // Higher gas limit for create auction\n      gasLimit: 500000\n    });\n    const event = this.contractWrapper.parseLogs(\"NewAuction\", receipt?.logs);\n    return {\n      id: event[0].args.auctionId,\n      receipt\n    };\n  }\n\n  /**\n   * Buyout Auction\n   *\n   * @remarks Buy a specific auction from the marketplace.\n   *\n   * @example\n   * ```javascript\n   * // The auction ID of the asset you want to buy\n   * const auctionId = 0;\n   *\n   * await contract.englishAuctions.buyoutAuction(auctionId);\n   * ```\n   */\n  async buyoutAuction(auctionId) {\n    const auction = await this.validateAuction(ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(auctionId));\n    const currencyMetadata = await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b7)(this.contractWrapper.getProvider(), auction.currencyContractAddress);\n    return this.makeBid(auctionId, ethers__WEBPACK_IMPORTED_MODULE_69__.ethers.utils.formatUnits(auction.buyoutBidAmount, currencyMetadata.decimals));\n  }\n\n  /**\n   * Bid On Auction\n   *\n   * @remarks Make a bid on an auction\n   *\n   * @example\n   * ```javascript\n   * // The auction ID of the asset you want to bid on\n   * const auctionId = 0;\n   * // The total amount you are willing to bid for auctioned tokens\n   * const bidAmount = 1;\n   *\n   * await contract.englishAuctions.makeBid(auctionId, bidAmount);\n   * ```\n   */\n  async makeBid(auctionId, bidAmount) {\n    const auction = await this.validateAuction(ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(auctionId));\n    const normalizedBidAmount = await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b8)(this.contractWrapper.getProvider(), bidAmount, auction.currencyContractAddress);\n    if (normalizedBidAmount.eq(ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(0))) {\n      throw new Error(\"Cannot make a bid with 0 value\");\n    }\n    if (ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(auction.buyoutBidAmount).gt(0) && normalizedBidAmount.gt(auction.buyoutBidAmount)) {\n      throw new Error(\"Bid amount must be less than or equal to buyoutBidAmount\");\n    }\n    const winningBid = await this.getWinningBid(auctionId);\n    if (winningBid) {\n      const isWinnner = await this.isWinningBid(auctionId, normalizedBidAmount);\n      (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(isWinnner, \"Bid price is too low based on the current winning bid and the bid buffer\");\n    } else {\n      const tokenPrice = normalizedBidAmount;\n      const minimumBidAmount = ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(auction.minimumBidAmount);\n      (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(tokenPrice.gte(minimumBidAmount), \"Bid price is too low based on minimum bid amount\");\n    }\n    const overrides = (await this.contractWrapper.getCallOverrides()) || {};\n    await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cU)(this.contractWrapper, normalizedBidAmount, auction.currencyContractAddress, overrides);\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"bidInAuction\", [auctionId, normalizedBidAmount], overrides)\n    };\n  }\n\n  /**\n   * Cancel Auction\n   *\n   * @remarks Cancel an auction on the marketplace\n   *\n   * @example\n   * ```javascript\n   * // The ID of the auction you want to cancel\n   * const auctionId = \"0\";\n   *\n   * await contract.englishAuctions.cancelAuction(auctionId);\n   * ```\n   */\n  async cancelAuction(auctionId) {\n    const winningBid = await this.getWinningBid(auctionId);\n    if (winningBid) {\n      throw new Error(`Bids already made.`);\n    }\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"cancelAuction\", [auctionId])\n    };\n  }\n\n  /**\n   * Close the Auction for the buyer\n   *\n   * @remarks Closes the Auction and executes the sale for the buyer.\n   *\n   * @example\n   * ```javascript\n   * // The ID of the auction you want to close\n   * const auction = \"0\";\n   * await contract.englishAuctions.closeAuctionForBidder(auctionId);\n   * ```\n   *\n   * @param auctionId - the auction id to close\n   * @param closeFor - optionally pass the winning bid offeror address to close the auction on their behalf\n   */\n  async closeAuctionForBidder(auctionId, closeFor) {\n    if (!closeFor) {\n      closeFor = await this.contractWrapper.getSignerAddress();\n    }\n    const auction = await this.validateAuction(ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(auctionId));\n    try {\n      return {\n        receipt: await this.contractWrapper.sendTransaction(\"collectAuctionTokens\", [ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(auctionId)])\n      };\n    } catch (err) {\n      if (err.message.includes(\"Marketplace: auction still active.\")) {\n        throw new _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.bt(auctionId.toString(), auction.endTimeInSeconds.toString());\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * Close the Auction for the seller, i.e. the auction creator\n   *\n   * @remarks Closes the Auction and executes the sale for the seller.\n   *\n   * @example\n   * ```javascript\n   * // The ID of the auction you want to close\n   * const auctionId = \"0\";\n   * await contract.englishAuctions.closeAuctionForSeller(auctionId);\n   * ```\n   *\n   * @param auctionId - the auction id to close\n   */\n  async closeAuctionForSeller(auctionId) {\n    const auction = await this.validateAuction(ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(auctionId));\n    try {\n      return {\n        receipt: await this.contractWrapper.sendTransaction(\"collectAuctionPayout\", [ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(auctionId)])\n      };\n    } catch (err) {\n      if (err.message.includes(\"Marketplace: auction still active.\")) {\n        throw new _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.bt(auctionId.toString(), auction.endTimeInSeconds.toString());\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * Execute the Auction Sale\n   *\n   * @remarks Closes the Auction and executes the sale for both parties.\n   *\n   * @example\n   * ```javascript\n   * // The ID of the auction you want to close\n   * const auction = \"0\";\n   * await contract.englishAuctions.executeSale(auctionId);\n   * ```\n   *\n   * @param auctionId - the auction to close\n   */\n  async executeSale(auctionId) {\n    const auction = await this.validateAuction(ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(auctionId));\n    try {\n      const winningBid = await this.getWinningBid(auctionId);\n      (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(winningBid, \"No winning bid found\");\n      const closeForSeller = this.encoder.encode(\"collectAuctionPayout\", [auctionId]);\n      const closeForBuyer = this.encoder.encode(\"collectAuctionTokens\", [auctionId]);\n      return await this.contractWrapper.multiCall([closeForSeller, closeForBuyer]);\n    } catch (err) {\n      if (err.message.includes(\"Marketplace: auction still active.\")) {\n        throw new _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.bt(auctionId.toString(), auction.endTimeInSeconds.toString());\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * Get the buffer in basis points between bids for an auction.\n   *\n   * @param auctionId - id of the auction\n   */\n  async getBidBufferBps(auctionId) {\n    return (await this.getAuction(auctionId)).bidBufferBps;\n  }\n\n  /**\n   * returns the minimum bid a user can place to outbid the previous highest bid\n   * @param auctionId - id of the auction\n   */\n  async getMinimumNextBid(auctionId) {\n    // we can fetch all of these at the same time using promise.all\n    const [currentBidBufferBps, winningBid, auction] = await Promise.all([this.getBidBufferBps(auctionId), this.getWinningBid(auctionId), await this.validateAuction(ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(auctionId))]);\n    const currentBidOrReservePrice = winningBid ?\n    // if there is a winning bid use the value of it\n    ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(winningBid.bidAmount) :\n    // if there is no winning bid use the reserve price\n    ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(auction.minimumBidAmount);\n    const minimumNextBid = currentBidOrReservePrice.add(\n    // the addition of the current bid and the buffer\n    // (have to divide by 10000 to get the fraction of the buffer (since it's in basis points))\n    currentBidOrReservePrice.mul(currentBidBufferBps).div(10000));\n\n    // it's more useful to return a currency value here\n    return (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b6)(this.contractWrapper.getProvider(), auction.currencyContractAddress, minimumNextBid);\n  }\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  /**\n   * Throws error if auction could not be found\n   *\n   * @param auctionId - Auction to check for\n   */\n  async validateAuction(auctionId) {\n    try {\n      return await this.getAuction(auctionId);\n    } catch (err) {\n      console.error(`Error getting the auction with id ${auctionId}`);\n      throw err;\n    }\n  }\n\n  /**\n   * Helper method maps the auction to the auction interface.\n   *\n   * @internal\n   * @param auction - The auction to map, as returned from the contract.\n   * @returns - The mapped interface.\n   */\n  async mapAuction(auction) {\n    let status = _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b2.UNSET;\n    const block = await this.contractWrapper.getProvider().getBlock(\"latest\");\n    const blockTime = block.timestamp;\n    switch (auction.status) {\n      case 1:\n        status = ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(auction.startTimestamp).gt(blockTime) ? _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b2.Created : ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(auction.endTimestamp).lt(blockTime) ? _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b2.Expired : _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b2.Active;\n        break;\n      case 2:\n        status = _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b2.Completed;\n        break;\n      case 3:\n        status = _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b2.Cancelled;\n        break;\n    }\n    return {\n      id: auction.auctionId.toString(),\n      creatorAddress: auction.auctionCreator,\n      assetContractAddress: auction.assetContract,\n      tokenId: auction.tokenId.toString(),\n      quantity: auction.quantity.toString(),\n      currencyContractAddress: auction.currency,\n      minimumBidAmount: auction.minimumBidAmount.toString(),\n      minimumBidCurrencyValue: await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b6)(this.contractWrapper.getProvider(), auction.currency, auction.minimumBidAmount),\n      buyoutBidAmount: auction.buyoutBidAmount.toString(),\n      buyoutCurrencyValue: await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b6)(this.contractWrapper.getProvider(), auction.currency, auction.buyoutBidAmount),\n      timeBufferInSeconds: ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(auction.timeBufferInSeconds).toNumber(),\n      bidBufferBps: ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(auction.bidBufferBps).toNumber(),\n      startTimeInSeconds: ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(auction.startTimestamp).toNumber(),\n      endTimeInSeconds: ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(auction.endTimestamp).toNumber(),\n      asset: await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cV)(auction.assetContract, this.contractWrapper.getProvider(), auction.tokenId, this.storage),\n      status: status\n    };\n  }\n\n  /**\n   * Maps an auction-bid to the strict interface\n   *\n   * @internal\n   * @param bid\n   * @returns - A `Bid` object\n   */\n  async mapBid(auctionId, bidderAddress, currencyContractAddress, bidAmount) {\n    return {\n      auctionId,\n      bidderAddress,\n      currencyContractAddress,\n      bidAmount,\n      bidAmountCurrencyValue: await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b6)(this.contractWrapper.getProvider(), currencyContractAddress, bidAmount)\n    };\n  }\n  applyFilter(auctions, filter) {\n    let rawAuctions = [...auctions];\n    if (filter) {\n      if (filter.seller) {\n        rawAuctions = rawAuctions.filter(seller => seller.auctionCreator.toString().toLowerCase() === filter?.seller?.toString().toLowerCase());\n      }\n      if (filter.tokenContract) {\n        rawAuctions = rawAuctions.filter(tokenContract => tokenContract.assetContract.toString().toLowerCase() === filter?.tokenContract?.toString().toLowerCase());\n      }\n      if (filter.tokenId !== undefined) {\n        rawAuctions = rawAuctions.filter(tokenContract => tokenContract.tokenId.toString() === filter?.tokenId?.toString());\n      }\n    }\n    return filter?.count && filter.count < rawAuctions.length ? rawAuctions.slice(0, filter.count) : rawAuctions;\n  }\n}\n\n/**\n * @internal\n */\nconst OfferInputParamsSchema = zod__WEBPACK_IMPORTED_MODULE_66__.z.object({\n  /**\n   * The address of the asset being sought.\n   */\n  assetContractAddress: _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.ad,\n  /**\n   * The ID of the token.\n   */\n  tokenId: _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.ab,\n  /**\n   * The quantity of tokens to buy.\n   *\n   * For ERC721s, this value should always be 1 (and will be forced internally regardless of what is passed here).\n   */\n  quantity: _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.ab[\"default\"](1),\n  /**\n   * The address of the currency offered for the NFTs.\n   */\n  currencyContractAddress: _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.ad[\"default\"](_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cc),\n  /**\n   * The total offer amount for the NFTs.\n   */\n  totalPrice: _QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__.A,\n  /**\n   * The end time of the offer.\n   */\n  endTimestamp: _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.ag\n});\n\n/**\n * @public\n */\n\n/**\n * Handles marketplace offers\n * @public\n */\nclass MarketplaceV3Offers {\n  // utilities\n\n  constructor(contractWrapper, storage) {\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"featureName\", _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cY.name);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"contractWrapper\", void 0);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"storage\", void 0);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"events\", void 0);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"interceptor\", void 0);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"encoder\", void 0);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"estimator\", void 0);\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.events = new _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.aV(this.contractWrapper);\n    this.encoder = new _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.aj(this.contractWrapper);\n    this.interceptor = new _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.aW(this.contractWrapper);\n    this.estimator = new _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.aU(this.contractWrapper);\n  }\n  getAddress() {\n    return this.contractWrapper.readContract.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get the total number of offers\n   * @returns Returns the total number of offers created.\n   * @public\n   *\n   * @example\n   * ```javascript\n   * const totalOffers = await contract.offers.getTotalCount();\n   * ```\n   */\n  async getTotalCount() {\n    return await this.contractWrapper.readContract.totalOffers();\n  }\n\n  /**\n   * Get all offers.\n   *\n   * @example\n   * ```javascript\n   * const offers = await contract.offers.getAll();\n   * ```\n   *\n   * @param filter - optional filter parameters\n   * @returns the Offer object array\n   */\n  async getAll(filter) {\n    const totalOffers = await this.getTotalCount();\n    let start = ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(filter?.start || 0).toNumber();\n    let end = totalOffers.toNumber();\n    if (end === 0) {\n      throw new Error(`No offers exist on the contract.`);\n    }\n    let rawOffers = [];\n    let batches = await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cR)(start, end, this.contractWrapper.readContract.getAllOffers);\n    rawOffers = batches.flat();\n    const filteredOffers = this.applyFilter(rawOffers, filter);\n    return await Promise.all(filteredOffers.map(offer => this.mapOffer(offer)));\n  }\n\n  /**\n   * Get all valid offers.\n   *\n   * @example\n   * ```javascript\n   * const offers = await contract.offers.getAllValid();\n   * ```\n   *\n   * @param filter - optional filter parameters\n   * @returns the Offer object array\n   */\n  async getAllValid(filter) {\n    const totalOffers = await this.getTotalCount();\n    let start = ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(filter?.start || 0).toNumber();\n    let end = totalOffers.toNumber();\n    if (end === 0) {\n      throw new Error(`No offers exist on the contract.`);\n    }\n    let rawOffers = [];\n    let batches = await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cR)(start, end, this.contractWrapper.readContract.getAllValidOffers);\n    rawOffers = batches.flat();\n    const filteredOffers = this.applyFilter(rawOffers, filter);\n    return await Promise.all(filteredOffers.map(offer => this.mapOffer(offer)));\n  }\n\n  /**\n   * Get a offer by id\n   *\n   * @example\n   * ```javascript\n   * const offerId = 0;\n   * const offer = await contract.offers.getOffer(offerId);\n   * ```\n   *\n   * @param offerId - the listing id\n   * @returns the Direct listing object\n   */\n  async getOffer(offerId) {\n    const offer = await this.contractWrapper.readContract.getOffer(offerId);\n    return await this.mapOffer(offer);\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Make Offer\n   *\n   * @remarks Make an offer on the marketplace for an asset.\n   *\n   * @example\n   * ```javascript\n   * // Data of the offer you want to make\n   * const offer = {\n   *   // address of the contract the asset you want to make an offer for\n   *   assetContractAddress: \"0x...\",\n   *   // token ID of the asset you want to buy\n   *   tokenId: \"0\",\n   *   // how many of the asset you want to buy\n   *   quantity: 1,\n   *   // address of the currency contract that you offer to pay in\n   *   currencyContractAddress: NATIVE_TOKEN_ADDRESS,\n   *   // Total price you offer to pay for the mentioned token(s)\n   *   totalPrice: \"1.5\",\n   *   // Offer valid until\n   *   endTimestamp: new Date(),\n   * }\n   *\n   * const tx = await contract.offers.makeOffer(offer);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const id = tx.id; // the id of the newly created offer\n   * ```\n   */\n  async makeOffer(offer) {\n    const parsedOffer = OfferInputParamsSchema.parse(offer);\n    const chainId = await this.contractWrapper.getChainID();\n    const currency = (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cP)(parsedOffer.currencyContractAddress) ? _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cd[chainId].wrapped.address : parsedOffer.currencyContractAddress;\n    const normalizedTotalPrice = await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b8)(this.contractWrapper.getProvider(), parsedOffer.totalPrice, currency);\n    const overrides = await this.contractWrapper.getCallOverrides();\n    await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cU)(this.contractWrapper, normalizedTotalPrice, currency, overrides);\n    const receipt = await this.contractWrapper.sendTransaction(\"makeOffer\", [{\n      assetContract: parsedOffer.assetContractAddress,\n      tokenId: parsedOffer.tokenId,\n      quantity: parsedOffer.quantity,\n      currency: currency,\n      totalPrice: normalizedTotalPrice,\n      expirationTimestamp: parsedOffer.endTimestamp\n    }], {\n      // Higher gas limit for create listing\n      gasLimit: 500000\n    });\n    const event = this.contractWrapper.parseLogs(\"NewOffer\", receipt?.logs);\n    return {\n      id: event[0].args.offerId,\n      receipt\n    };\n  }\n\n  /**\n   * Cancel Offer\n   *\n   * @remarks Cancel an offer on the marketplace\n   *\n   * @example\n   * ```javascript\n   * // The ID of the offer you want to cancel\n   * const offerId = \"0\";\n   *\n   * await contract.offers.cancelOffer(offerId);\n   * ```\n   */\n  async cancelOffer(offerId) {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"cancelOffer\", [offerId])\n    };\n  }\n\n  /**\n   * Accept an offer\n   *\n   * @example\n   * ```javascript\n   * // The ID of the offer you want to accept\n   * const offerId = 0;\n   *\n   * await contract.offers.acceptOffer(offerId);\n   * ```\n   *\n   * @param offerId - The offer id\n   */\n  async acceptOffer(offerId) {\n    const offer = await this.validateOffer(ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(offerId));\n    const {\n      valid,\n      error\n    } = await this.isStillValidOffer(offer);\n    if (!valid) {\n      throw new Error(`Offer ${offerId} is no longer valid. ${error}`);\n    }\n    const overrides = (await this.contractWrapper.getCallOverrides()) || {};\n    await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cS)(this.contractWrapper, this.getAddress(), offer.assetContractAddress, offer.tokenId, await this.contractWrapper.getSignerAddress());\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"acceptOffer\", [offerId], overrides)\n    };\n  }\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  /**\n   * Throws error if offer could not be found\n   *\n   * @param offerId - offer to check for\n   */\n  async validateOffer(offerId) {\n    try {\n      return await this.getOffer(offerId);\n    } catch (err) {\n      console.error(`Error getting the offer with id ${offerId}`);\n      throw err;\n    }\n  }\n\n  /**\n   * Helper method maps the offer to the offer interface.\n   *\n   * @internal\n   * @param offer - The offer to map, as returned from the contract.\n   * @returns - The mapped interface.\n   */\n  async mapOffer(offer) {\n    let status = _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b2.UNSET;\n    const block = await this.contractWrapper.getProvider().getBlock(\"latest\");\n    const blockTime = block.timestamp;\n    switch (offer.status) {\n      case 1:\n        status = ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(offer.expirationTimestamp).lt(blockTime) ? _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b2.Expired : _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b2.Active;\n        break;\n      case 2:\n        status = _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b2.Completed;\n        break;\n      case 3:\n        status = _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b2.Cancelled;\n        break;\n    }\n    return {\n      id: offer.offerId.toString(),\n      offerorAddress: offer.offeror,\n      assetContractAddress: offer.assetContract,\n      currencyContractAddress: offer.currency,\n      tokenId: offer.tokenId.toString(),\n      quantity: offer.quantity.toString(),\n      totalPrice: offer.totalPrice.toString(),\n      currencyValue: await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.b6)(this.contractWrapper.getProvider(), offer.currency, offer.totalPrice),\n      asset: await (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cV)(offer.assetContract, this.contractWrapper.getProvider(), offer.tokenId, this.storage),\n      endTimeInSeconds: ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(offer.expirationTimestamp).toNumber(),\n      status: status\n    };\n  }\n\n  /**\n   * Use this method to check if an offer is still valid.\n   *\n   * Ways an offer can become invalid:\n   * 1. The offer has expired\n   * 2. The offeror doesn't have enough balance of currency tokens\n   * 3. The offeror removed the approval of currency tokens on the marketplace\n   *\n   * @internal\n   * @param offer - The offer to check.\n   * @returns - True if the offer is valid, false otherwise.\n   */\n  async isStillValidOffer(offer) {\n    const now = ethers__WEBPACK_IMPORTED_MODULE_69__.BigNumber.from(Math.floor(Date.now() / 1000));\n    if (now.gt(offer.endTimeInSeconds)) {\n      return {\n        valid: false,\n        error: `Offer with ID ${offer.id} has expired`\n      };\n    }\n    const chainId = await this.contractWrapper.getChainID();\n    const currency = (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cP)(offer.currencyContractAddress) ? _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cd[chainId].wrapped.address : offer.currencyContractAddress;\n    const provider = this.contractWrapper.getProvider();\n    const erc20 = new _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cK(provider, currency, _thirdweb_dev_contracts_js_dist_abis_IERC20_json__WEBPACK_IMPORTED_MODULE_4__, {});\n    const offerorBalance = await erc20.readContract.balanceOf(offer.offerorAddress);\n    if (offerorBalance.lt(offer.totalPrice)) {\n      return {\n        valid: false,\n        error: `Offeror ${offer.offerorAddress} doesn't have enough balance of token ${currency}`\n      };\n    }\n    const offerorAllowance = await erc20.readContract.allowance(offer.offerorAddress, this.getAddress());\n    if (offerorAllowance.lt(offer.totalPrice)) {\n      return {\n        valid: false,\n        error: `Offeror ${offer.offerorAddress} hasn't approved enough amount of token ${currency}`\n      };\n    }\n    return {\n      valid: true,\n      error: \"\"\n    };\n  }\n  applyFilter(offers, filter) {\n    let rawOffers = [...offers];\n    if (filter) {\n      if (filter.offeror) {\n        rawOffers = rawOffers.filter(offeror => offeror.offeror.toString().toLowerCase() === filter?.offeror?.toString().toLowerCase());\n      }\n      if (filter.tokenContract) {\n        rawOffers = rawOffers.filter(tokenContract => tokenContract.assetContract.toString().toLowerCase() === filter?.tokenContract?.toString().toLowerCase());\n      }\n      if (filter.tokenId !== undefined) {\n        rawOffers = rawOffers.filter(tokenContract => tokenContract.tokenId.toString() === filter?.tokenId?.toString());\n      }\n    }\n    return filter?.count && filter.count < rawOffers.length ? rawOffers.slice(0, filter.count) : rawOffers;\n  }\n}\n\n/**\n * Create your own whitelabel marketplace that enables users to buy and sell any digital assets.\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * const sdk = new ThirdwebSDK(\"{{chainName}}\");\n * const contract = await sdk.getContract(\"{{contract_address}}\", \"marketplace\");\n * ```\n *\n * @public\n */\nclass MarketplaceV3 {\n  /**\n   * @internal\n   */\n\n  /**\n   * Direct listings\n   * @remarks Create and manage direct listings in your marketplace.\n   * ```javascript\n   * // Data of the listing you want to create\n   * const listing = {\n   *   // address of the contract the asset you want to list is on\n   *   assetContractAddress: \"0x...\",\n   *   // token ID of the asset you want to list\n   *   tokenId: \"0\",\n   *   // how many of the asset you want to list\n   *   quantity: 1,\n   *   // address of the currency contract that will be used to pay for the listing\n   *   currencyContractAddress: NATIVE_TOKEN_ADDRESS,\n   *   // The price to pay per unit of NFTs listed.\n   *   pricePerToken: 1.5,\n   *   // when should the listing open up for offers\n   *   startTimestamp: new Date(Date.now()),\n   *   // how long the listing will be open for\n   *   endTimestamp: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000),\n   *   // Whether the listing is reserved for a specific set of buyers.\n   *   isReservedListing: false\n   * }\n   *\n   * const tx = await contract.directListings.createListing(listing);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const id = tx.id; // the id of the newly created listing\n   *\n   * // And on the buyers side:\n   * // The ID of the listing you want to buy from\n   * const listingId = 0;\n   * // Quantity of the asset you want to buy\n   * const quantityDesired = 1;\n   *\n   * await contract.directListings.buyFromListing(listingId, quantityDesired);\n   * ```\n   */\n  get directListings() {\n    return (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.bX)(this.detectDirectListings(), _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cQ);\n  }\n  /**\n   * Auctions\n   * @remarks Create and manage auctions in your marketplace.\n   * @example\n   * ```javascript\n   * // Data of the auction you want to create\n   * const auction = {\n   *   // address of the contract of the asset you want to auction\n   *   assetContractAddress: \"0x...\",\n   *   // token ID of the asset you want to auction\n   *   tokenId: \"0\",\n   *   // how many of the asset you want to auction\n   *   quantity: 1,\n   *   // address of the currency contract that will be used to pay for the auctioned tokens\n   *   currencyContractAddress: NATIVE_TOKEN_ADDRESS,\n   *   // the minimum bid that will be accepted for the token\n   *   minimumBidAmount: \"1.5\",\n   *   // how much people would have to bid to instantly buy the asset\n   *   buyoutBidAmount: \"10\",\n   *   // If a bid is made less than these many seconds before expiration, the expiration time is increased by this.\n   *   timeBufferInSeconds: \"1000\",\n   *   // A bid must be at least this much bps greater than the current winning bid\n   *   bidBufferBps: \"100\", // 100 bps stands for 1%\n   *   // when should the auction open up for bidding\n   *   startTimestamp: new Date(Date.now()),\n   *   // end time of auction\n   *   endTimestamp: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000),\n   * }\n   *\n   * const tx = await contract.englishAuctions.createAuction(auction);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const id = tx.id; // the id of the newly created auction\n   *\n   * // And on the buyers side:\n   * // The auction ID of the asset you want to bid on\n   * const auctionId = 0;\n   * // The total amount you are willing to bid for auctioned tokens\n   * const bidAmount = 1;\n   *\n   * await contract.englishAuctions.makeBid(auctionId, bidAmount);\n   * ```\n   */\n  get englishAuctions() {\n    return (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.bX)(this.detectEnglishAuctions(), _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cX);\n  }\n\n  /**\n   * Offers\n   * @remarks Make and manage offers.\n   * @example\n   * ```javascript\n   * // Data of the offer you want to make\n   * const offer = {\n   *   // address of the contract the asset you want to make an offer for\n   *   assetContractAddress: \"0x...\",\n   *   // token ID of the asset you want to buy\n   *   tokenId: \"0\",\n   *   // how many of the asset you want to buy\n   *   quantity: 1,\n   *   // address of the currency contract that you offer to pay in\n   *   currencyContractAddress: NATIVE_TOKEN_ADDRESS,\n   *   // Total price you offer to pay for the mentioned token(s)\n   *   totalPrice: \"1.5\",\n   *   // Offer valid until\n   *   endTimestamp: new Date(),\n   * }\n   *\n   * const tx = await contract.offers.makeOffer(offer);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const id = tx.id; // the id of the newly created offer\n   *\n   * // And on the seller's side:\n   * // The ID of the offer you want to accept\n   * const offerId = 0;\n   * await contract.offers.acceptOffer(offerId);\n   * ```\n   */\n  get offers() {\n    return (0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.bX)(this.detectOffers(), _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cY);\n  }\n  get chainId() {\n    return this._chainId;\n  }\n  constructor(network, address, storage) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let abi = arguments.length > 4 ? arguments[4] : undefined;\n    let chainId = arguments.length > 5 ? arguments[5] : undefined;\n    let contractWrapper = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cK(network, address, abi, options);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"abi\", void 0);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"contractWrapper\", void 0);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"storage\", void 0);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"encoder\", void 0);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"events\", void 0);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"estimator\", void 0);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"platformFees\", void 0);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"metadata\", void 0);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"roles\", void 0);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"interceptor\", void 0);\n    (0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(this, \"_chainId\", void 0);\n    this._chainId = chainId;\n    this.abi = abi;\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.metadata = new _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.ak(this.contractWrapper, _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.cN, this.storage);\n    this.roles = new _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.al(this.contractWrapper, MarketplaceV3.contractRoles);\n    this.encoder = new _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.aj(this.contractWrapper);\n    this.estimator = new _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.aU(this.contractWrapper);\n    this.events = new _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.aV(this.contractWrapper);\n    this.platformFees = new _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.aX(this.contractWrapper);\n    this.interceptor = new _thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.aW(this.contractWrapper);\n  }\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n  getAddress() {\n    return this.contractWrapper.readContract.address;\n  }\n\n  /**\n   * @internal\n   */\n  async call(functionName) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return this.contractWrapper.call(functionName, ...args);\n  }\n\n  /** ********************\n   * FEATURE DETECTION\n   * ********************/\n\n  detectDirectListings() {\n    if ((0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.bY)(this.contractWrapper, \"DirectListings\")) {\n      return new MarketplaceV3DirectListings(this.contractWrapper, this.storage);\n    }\n    return undefined;\n  }\n  detectEnglishAuctions() {\n    if ((0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.bY)(this.contractWrapper, \"EnglishAuctions\")) {\n      return new MarketplaceV3EnglishAuctions(this.contractWrapper, this.storage);\n    }\n    return undefined;\n  }\n  detectOffers() {\n    if ((0,_thirdweb_checkout_33f13955_esm_js__WEBPACK_IMPORTED_MODULE_67__.bY)(this.contractWrapper, \"Offers\")) {\n      return new MarketplaceV3Offers(this.contractWrapper, this.storage);\n    }\n    return undefined;\n  }\n}\n(0,_QueryParams_da88d27c_esm_js__WEBPACK_IMPORTED_MODULE_68__._)(MarketplaceV3, \"contractRoles\", [\"admin\", \"lister\", \"asset\"]);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@thirdweb-dev/sdk/dist/marketplacev3-4b7b9376.esm.js\n"));

/***/ })

}]);